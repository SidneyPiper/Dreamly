datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?   @unique
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?

  accounts    Account[]
  sessions    Session[]
  dreams      Dream[]
  tags        Tag[]
  trackerData TrackerData[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Dream {
  id      String   @id @default(cuid())
  userId  String
  title   String
  content String   @default("")
  date    DateTime @default(now())

  tags Tag[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Tag {
  id      String @id @default(cuid())
  label   String
  userId  String
  colorId String

  dreams Dream[]

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  color Color @relation(fields: [colorId], references: [id], onDelete: Restrict)
}

model Color {
  id  String @id @default(cuid())
  hex String

  Tag Tag[]
}

model TrackerData {
  id       String   @id @default(cuid())
  userId   String
  date     DateTime
  quality  Int?
  duration Int?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
